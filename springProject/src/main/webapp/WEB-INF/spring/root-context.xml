<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 
		*root-context.xml
		서버 구동과 동시에 web.xml을 거쳐서 바로 로딩되는 문서
		=> 서버구동과 동시에 바로 세팅(빈으로 등록)해야 되는 내용들을 작성하면 됨
		주로 DB연결설정, 트랜잭션 처리, 내외부 모듈 연동 등등 
	 -->		
	 
	 
	 <!-- 커넥션풀 쓸 수 있는 클래스 -->
	 <bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close"> 
	 	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
        <property name="username" value="spring"/>
        <property name="password" value="spring"/>
	 </bean>
	 
	 <!-- 
	 	BasicDataSource dataSource = new BasicDataSource();
	 	dataSource.setDriverclassName("oracle.jdbc.driver.OracleDriver" );
	 	dataSource.setUrl("jdbc:oracle:thin:@localhost:1521:xe");
	 	dataSource.setUsername("spring");
	 	dataSource.setPassword("spring");
	  -->
	  
	  <!-- sqlSessionFactory를 대체하는 객체 -->
	  <!-- dataSource객체를 주입해준다 -->
	  <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
	  	<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	  	<property name="dataSource" ref="dataSource" />
	  </bean>
	 
	 <!--
	 	SqlSessionFactoryBean  sqlSessionFactory = new SqlSessionFactoryBean();
	 	sqlSessionFactory.setconfigLocation("classpath:mybatis-config.xml");
	 	sqlSessionFactory.setDataSource(dataSource);
	  -->
	  
	  <bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
	  	<constructor-arg ref="sqlSessionFactory"/>
	  </bean>
	  
	  <!-- 
	  	SqlSessionTemplate sqlSession = new SqlSessionTemplate(sqlSessionFactory);
	  	==> sqlSessionFactory를 생성자에 주입해줘
	   -->
	   
	   <!-- 
	   		property: setter 주입
	   		constructor-arg: 생성자 주입
	    -->
	    
	  <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
	      <property name="maxUploadSize" value="100000000" />
	      <property name="maxInMemorySize" value="100000000" />
	   </bean>
	   
</beans>
